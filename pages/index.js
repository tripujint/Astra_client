import Head from "next/head";
import Signin from "./signin";
import { useSelector, useDispatch } from 'react-redux';
import { useEffect } from 'react';
import { useFormik } from "formik";
import { doGetSigninRequest } from './redux-saga/Action/UsrAction';
import { useRouter } from 'next/router';
import * as Yup from "yup";

export default function Home() {
  const dispatch = useDispatch();
  const router = useRouter()
  const { message, UserProfile } = useSelector(state => state.usrStated);
  const validationSchema = Yup.object().shape({
    username: Yup.string().required('Username is required'),
    password: Yup
      .string()
      .min(3)
      .max(10)
      .required('Password is required'),
  });

  useEffect(() => {
    if (UserProfile) {
      router.push('/job')
    }
  }, [UserProfile])

  const formik = useFormik({
    initialValues: {
      username: "",
      password: ""
    },
    validationSchema: validationSchema,
    onSubmit: async (values) => {

      let payload = {
        username: values.username,
        password: values.password
      };
      dispatch(doGetSigninRequest(payload));
    }
  });

  return (
    <div>
      <>
        <Head>
          <title>GitHub Jobs</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <div className="flex min-h-full items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
          <div className="w-full max-w-md space-y-8">
            <div>
              <h2 className="mt-6 text-center text-3xl font-bold tracking-tight text-gray-900">
                Sign in to your account
              </h2>
            </div>
            <form className="mt-8 space-y-6">
              <div className="-space-y-px rounded-md shadow-sm">
                <div>
                  <label htmlFor="username" className="sr-only">
                    Username
                  </label>
                  <input
                    id="username"
                    name="username"
                    type="text"
                    value={formik.values.username}
                    onChange={formik.handleChange}
                    onBlur={formik.handleBlur}
                    autoComplete="username"
                    required
                    className="relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                    placeholder="Username"
                  />
                  {formik.touched.username && formik.errors.username ?
                    <span className="mt-2 text-sm text-red-600">{formik.errors.username}</span> : null}
                </div>
                <div>
                  <label htmlFor="password" className="sr-only">
                    Password
                  </label>
                  <input
                    id="password"
                    name="password"
                    type="password"
                    value={formik.values.password}
                    onChange={formik.handleChange}
                    onBlur={formik.handleBlur}
                    autoComplete="current-password"
                    required
                    className="relative block w-full appearance-none rounded-none rounded-b-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                    placeholder="Password"
                  />
                  {formik.touched.password && formik.errors.password ?
                    <span className="mt-2 text-sm text-red-600">{formik.errors.password}</span>
                    : null}
                </div>
              </div>

              <div>
                <button
                  onClick={formik.handleSubmit}
                  className="group relative flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                >
                  Sign in
                </button>
              </div>
            </form>
          </div>
        </div>
      </>
    </div>
  )
}
